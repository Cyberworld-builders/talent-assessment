{"version":3,"sources":["create-assessment-form.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"create-assessment-form.js","sourcesContent":["jQuery(document).ready(function($){\n\n    // Set headers for AJAX\n    $.ajaxSetup({\n        headers: {\n            'X-CSRF-TOKEN': $('meta[name=\"csrf_token\"]').attr('content')\n        }\n    });\n\n    console.log('I am ready');\n\n    // Fix for cached disabled attribute\n    $('#save').removeAttr('disabled');\n\n    // Initialize the CKEditor\n    $('#modal-wysiwyg textarea').ckeditor();\n\n    // Add Custom Field\n    $('#add-custom-field').on('click', function(){\n        $template = $('#custom-field-template').find('.row');\n        $template.clone().appendTo('.custom-fields');\n    });\n\n    // Remove Custom Field\n    $('.custom-fields').on('click', '#remove-custom-field', function(){\n        $field = $(this).closest('.custom-field').remove();\n    });\n\n    // Edit Question\n    $('.questions').on('click', '#content', function(){\n        $question = $(this).closest('.question');\n        $content = $question.find('#content');\n        $content_edit_field = $question.find('#content-edit-field');\n\n        if ($content_edit_field.hasClass('active'))\n            return false;\n\n        var current_content = $content.html();\n\n        $content_edit_field.find('input').val(current_content);\n        $content.hide();\n        $content_edit_field.fadeIn().addClass('active').find('input').focus().select();\n    });\n\n    // WYSIWYG Description Editor\n    $('.edit-description-with-wysiwyg').on('click', function(){\n        var current_content = $(this).prev('textarea').val();\n\n        $edit_field = $(this).prev('textarea');\n\n        $modal = $('#modal-wysiwyg');\n        $modal.find('.modal-title').html('Advanced Question Editor');\n        $modal.find('.save-button').attr('id', 'save-description-edits');\n        //$body = $modal.find('.modal-body').append('<textarea id=\"Editor\" class=\"form-control input-lg \">'+current_content+'</textarea>');\n        $textarea = $modal.find('textarea').html(current_content);\n        if (! CKEDITOR.instances.Editor)\n            $editor = $textarea.ckeditor();\n        else\n            CKEDITOR.instances.Editor.setData(current_content);\n        $modal.modal('show');\n\n        $modal.on('click', '#save-description-edits', function(){\n\n            var new_content = CKEDITOR.instances.Editor.document.getBody().getHtml();\n\n            if (new_content.trim() == '')\n                new_content = 'This is a sample question';\n\n            $edit_field.val(new_content);\n\n            $modal.modal('hide');\n        });\n    });\n\n    // Advanced Edit\n    $('.questions').on('click', '.advanced-edit-question', function(){\n        $question = $(this).closest('.question');\n        $content = $question.find('#content');\n\n        var current_content = $content.html();\n        //console.log(current_content);\n\n        $modal = $('#modal-wysiwyg');\n        $modal.find('.modal-title').html('Advanced Question Editor');\n        $modal.find('.save-button').attr('id', 'save-question-edits');\n        //$body = $modal.find('.modal-body').append('<textarea id=\"Editor\" class=\"form-control input-lg \">'+current_content+'</textarea>');\n        $textarea = $modal.find('textarea').html(current_content);\n        if (! CKEDITOR.instances.Editor)\n            $editor = $textarea.ckeditor();\n        else\n            CKEDITOR.instances.Editor.setData(current_content);\n        $modal.modal('show');\n\n        $content_edit_field.hide().removeClass('active');\n        $content.show();\n\n        $modal.on('click', '#save-question-edits', function(){\n            //$question = $(this).closest('.question');\n            //$content = $question.find('#content');\n            //$content_edit_field = $question.find('#content-edit-field');\n\n            //if (!$content_edit_field.hasClass('active'))\n            //    return false;\n\n            //var new_content = $editor.find('textarea').getData();\n\n            var new_content = CKEDITOR.instances.Editor.document.getBody().getHtml();\n\n            var beginning_p_tags = new_content.substring(0, 3);\n            if (beginning_p_tags == \"<p>\")\n            {\n                new_content = new_content.substring(3);\n                new_content = new_content.slice(0, -4);\n            }\n\n            if (new_content.trim() == '')\n                new_content = 'This is a sample question';\n\n            $content.html(new_content);\n            //$content_edit_field.hide().removeClass('active');\n            //$content.fadeIn();\n\n            $modal.modal('hide');\n        });\n    });\n\n    // Save Question\n    $('.questions').on('focusout', '#content-edit-field', function(){\n\n        $question = $(this).closest('.question');\n        $content = $question.find('#content');\n        $content_edit_field = $question.find('#content-edit-field');\n\n        // Check if we're clicking on the advanced edit button\n        if ($('.advanced-edit-question', $content_edit_field).is(\":hover\"))\n            return false;\n\n        if (!$content_edit_field.hasClass('active'))\n            return false;\n\n        var new_content = $content_edit_field.find('input').val();\n\n        if (new_content.trim() == '')\n            new_content = 'This is a sample question';\n\n        $content.html(new_content);\n        $content_edit_field.hide().removeClass('active');\n        $content.fadeIn();\n    });\n\n    // Set Question Choices\n    $('.questions').on('click', '#anchors', function(){\n        $question = $(this).closest('.question');\n\n        $modal = $('#modal').clone();\n        $modal.find('.modal-title').html('Edit Anchoring');\n        $modal.find('.save-button').attr('id', 'save-anchoring');\n        $body = $modal.find('.modal-body');\n        $body.html('<div class=\"weight-options\"></div>'\n            +'<div id=\"add-weight-option\" class=\"btn btn-gray\"><i class=\"fa-plus\"></i> Add Anchor</div>'\n            +'&nbsp;&nbsp;&nbsp;<div class=\"btn-group dropdown\">'\n                +'<button id=\"question-type\" type=\"button\" class=\"btn btn-gray dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"fa-plus\"></i> Add From Template</button>'\n                +'<ul class=\"question-type dropdown-menu\" role=\"menu\">'\n                    +'<li class=\"dropdown-header\">Anchor Templates</li>'\n                    +'<li id=\"add-options-agree-disagree\"><a><i class=\"fa-list-alt\"></i> <span>Agree/Disagree 5 Levels</span></a></li>'\n                    +'<li id=\"add-options-yes-no\"><a><i class=\"fa-list-alt\"></i> <span>Yes or No</span></a></li>'\n                +'</ul>'\n            +'</div>'\n            +'&nbsp;&nbsp;&nbsp;<div id=\"reverse-score\" class=\"btn btn-gray\"><i class=\"fa-exchange\"></i> Reverse Scoring</div>'\n        ).on('click', '#add-weight-option', function(){\n            add_weight_option(0, '', $body);\n        }).on('click', '#add-options-agree-disagree', function(){\n            add_weight_option(1, \"Strongly Disagree\", $body);\n            add_weight_option(2, \"Disagree\", $body);\n            add_weight_option(3, \"Neither Agree Nor Disagree\", $body);\n            add_weight_option(4, \"Agree\", $body);\n            add_weight_option(5, \"Strongly Agree\", $body);\n        }).on('click', '#add-options-yes-no', function(){\n            add_weight_option(1, \"Yes\", $body);\n            add_weight_option(-1, \"No\", $body);\n        }).on('click', '#reverse-score', function(){\n            var total_values = $('.weight-options .weight-input').length;\n            if (! total_values)\n                return false;\n            var values = [];\n            var i = total_values - 1;\n            $('.weight-options .weight-input').each(function(){\n                var value = $('.weight-value', this).val();\n                values[i] = value;\n                i -= 1;\n            });\n            var i = 0;\n            $('.weight-options .weight-input').each(function(){\n                $('.weight-value', this).val(values[i]);\n                i += 1;\n            });\n        });\n\n        $anchors = $question.find('#anchors');\n        $('.anchor', $anchors).each(function(){\n            if ($(this).hasClass('disabled'))\n                return false;\n            var value = $(this).attr('data-value');\n            var tag = $(this).html();\n            add_weight_option(value, tag, $body);\n        });\n\n        //$editor.val(current_content);\n        //$editor.ckeditor();\n\n        $modal.modal('show').on('click', '#save-anchoring', function(){\n            $anchors.html('');\n            $('.weight-options .weight-input').each(function(){\n                var value = $('.weight-value', this).val();\n                var tag = $('.weight-tag', this).val();\n                $anchors.append('<div class=\"anchor\" data-value=\"'+value+'\">'+tag+'</div>');\n            });\n            if ($anchors.html() == '')\n                $anchors.append('<div class=\"anchor disabled\">No Anchors Specified</div>');\n            $modal.modal('hide');\n        });\n\n        //$content_edit_field.hide().removeClass('active');\n        //$content.show();\n        //$number.show();\n\n        //$modal.on('show.bs.modal', function() {\n            //update_tags();\n        //});\n\n        $modal.on('hidden.bs.modal', function() {\n            $modal.remove();\n        });\n    });\n\n    // Set Question Type\n    //$('.questions').on('click', '.question-type li', function(){\n    //    if ($(this).hasClass('disabled'))\n    //        return false;\n    //    var question_type_id = $(this).attr('data-type');\n    //    var question_type_name = $('span', this).html();\n    //    $question = $(this).closest('.question');\n    //    $question_type = $question.find('#question-type');\n    //    $question_type.attr('data-type', question_type_id).html(question_type_name);\n    //});\n\n    // Set Question Type\n    $('.questions').on('click', '#question-type', function(){\n        $question = $(this).closest('.question');\n        $question_type_field = $question.find('#question-type-field');\n\n        if ($question_type_field.hasClass('active'))\n            return false;\n\n        $question_type_field.fadeIn().addClass('active');\n\n        var question_type = parseInt($question.find('#question-type').attr('data-id'));\n        $question_type_field.find('.question-type').removeClass('active');\n        $question_type_field.find('.question-type[data-id=\"'+question_type+'\"]').addClass('active');\n\n    });\n\n    // Choose Question Type\n    $('.questions').on('click', '.question-type > span', function(){\n        $question_type_field = $(this).closest('#question-type-field');\n        if (! $(this).parent().hasClass('active')) {\n            $question = $(this).closest('.question');\n            $question_type_field.find('.question-type').removeClass('active');\n            $(this).parent().addClass('active');\n\n            // Update question type\n            var question_type = parseInt($question_type_field.find('.question-type.active').attr('data-id'));\n            var question_type_name = $question_type_field.find('.question-type.active').attr('data-name');\n            var question_type_icon = $question_type_field.find('.question-type.active').attr('data-icon');\n            var question_type_description = $question_type_field.find('.question-type.active').attr('data-description');\n            var question_type_default = $question_type_field.find('.question-type.active').attr('data-default');\n            $question.find('#question-type').attr('data-id', question_type).html('<i class=\"'+question_type_icon+'\"></i> '+question_type_name);\n            $question.find('#description').html(question_type_description);\n            $question.find('#content-edit-field input.question-edit-input').val(question_type_default);\n            $question.find('#content').html(question_type_default);\n\n            switch (question_type) {\n                case 1: // multiple choice\n                    $question.find('.anchors-column').show();\n                    $question.find('#number').show();\n                    $question.find('#dimension').show();\n                    $question.find('#content').show();\n                    $question.find('#practice').hide();\n                    $question.find('.react-comp').remove();\n                    break;\n\n                case 2: // description\n                    $question.find('.anchors-column').hide();\n                    $question.find('#number').hide();\n                    $question.find('#dimension').hide();\n                    $question.find('#content').show();\n                    $question.find('#practice').hide();\n                    $question.find('.react-comp').remove();\n                    break;\n\n                case 3: // text field\n                    $question.find('.anchors-column').hide();\n                    $question.find('#number').show();\n                    $question.find('#dimension').show();\n                    $question.find('#content').show();\n                    $question.find('#practice').hide();\n                    $question.find('.react-comp').remove();\n                    break;\n\n                case 4: // letters\n                    $question.find('.anchors-column').hide();\n                    $question.find('#number').show();\n                    $question.find('#dimension').show();\n                    $question.find('#content').show();\n                    $question.find('#practice').show();\n                    $question.find('.react-comp').remove();\n                    break;\n\n                case 5: // equation\n                    $question.find('.anchors-column').hide();\n                    $question.find('#number').show();\n                    $question.find('#dimension').show();\n                    $question.find('#content').show();\n                    $question.find('#practice').show();\n                    $question.find('.react-comp').remove();\n                    break;\n\n                case 6: // math and letters\n                    $question.find('.anchors-column').hide();\n                    $question.find('#number').show();\n                    $question.find('#dimension').show();\n                    $question.find('#content').hide();\n                    $question.find('#practice').show();\n                    $question.find('.react-comp').remove();\n                    add_wm_widget($question, question_type);\n                    break;\n\n                case 7: // square sequence\n                    $question.find('.anchors-column').hide();\n                    $question.find('#number').show();\n                    $question.find('#dimension').show();\n                    $question.find('#content').hide();\n                    $question.find('#practice').show();\n                    $question.find('.react-comp').remove();\n                    add_wm_widget($question, question_type);\n                    break;\n\n                case 8: // symmetry\n                    $question.find('.anchors-column').hide();\n                    $question.find('#number').show();\n                    $question.find('#dimension').show();\n                    $question.find('#content').hide();\n                    $question.find('#practice').show();\n                    $question.find('.react-comp').remove();\n                    add_wm_widget($question, question_type);\n                    break;\n\n                case 9: // square symmetry\n                    $question.find('.anchors-column').hide();\n                    $question.find('#number').show();\n                    $question.find('#dimension').show();\n                    $question.find('#content').hide();\n                    $question.find('#practice').show();\n                    $question.find('.react-comp').remove();\n                    add_wm_widget($question, question_type);\n                    break;\n\n                case 10: // instructions\n                    $question.find('.anchors-column').hide();\n                    $question.find('#number').show();\n                    $question.find('#dimension').show();\n                    $question.find('#content').hide();\n                    $question.find('#practice').hide();\n                    $question.find('.react-comp').remove();\n                    add_wm_widget($question, question_type);\n                    break;\n\n                case 11: // slider\n                    $question.find('.anchors-column').hide();\n                    $question.find('#number').show();\n                    $question.find('#dimension').hide();\n                    $question.find('#content').show();\n                    $question.find('#practice').hide();\n                    $question.find('.react-comp').remove();\n                    break;\n            }\n\n            update_question_numbers();\n        }\n\n        $question_type_field.fadeOut(function(){\n            $(this).removeClass('active');\n        });\n    });\n\n    // Cancel Question Type\n    $('.questions').on('click', '#cancel-question-type', function(){\n        $question_type_field = $(this).closest('#question-type-field');\n        $question_type_field.fadeOut().removeClass('active');\n    });\n\n    // Set Practice\n    $('.questions').on('click', '#practice', function(){\n        var practice = $(this).attr('data-practice');\n        if (practice == 1)\n            $(this).removeClass('active').attr('data-practice', 0).html('Test Question');\n        else\n            $(this).addClass('active').attr('data-practice', 1).html('Practice Question');\n    });\n\n    // Set Dimension\n    $('.questions').on('click', '#dimension', function(){\n        $question = $(this).closest('.question');\n        $dimension_field = $question.find('#dimension-field');\n\n        if ($dimension_field.hasClass('active'))\n            return false;\n\n        $dimension_field.fadeIn().addClass('active');\n    });\n\n    // Choose Dimension\n    $('.questions').on('click', '.dimension > span', function(){\n        $dimension_field = $(this).closest('#dimension-field');\n        if (!$(this).parent().hasClass('active')) {\n            $question = $(this).closest('.question');\n            $('.dimension', $question).removeClass('active');\n            $(this).parent().addClass('active');\n\n            if ($(this).next('.sub-dimensions').length)\n                $dimension_field.addClass('subdimension-field');\n            else {\n                // Update question\n                var number = $question.find('#number').html();\n                var dim = $dimension_field.find('.dimension.active').attr('data-code');\n                //var subdim = $dimension_field.find('.sub-dimension.active').attr('data-code');\n                //if (subdim)\n                    //var dimension = $dimension_field.find('.sub-dimension.active').attr('data-id');\n                //else\n                    var dimension = $dimension_field.find('.dimension.active').attr('data-id');\n                //$rflag = ($('#reverse').is(':checked') ? 'r' : '');\n\n                $set_dimension = $question.find('#dimension');\n                $set_dimension.html('Dimension: <span id=\"code\"><span class=\"dim-code\">'+dim+'</span><span class=\"reverse-flag\"></span><span class=\"number\">'+number+'</span></span>').addClass('active');\n                $set_dimension.attr('data-dimension', dimension);\n\n                $dimension_field = $(this).closest('#dimension-field');\n                $dimension_field.fadeOut(function(){\n                    $(this).removeClass('active');\n                });\n            }\n        }\n        else {\n            $(this).parent().removeClass('active');\n            $dimension_field.removeClass('subdimension-field');\n        }\n    });\n\n    // Choose Sub-dimension\n    $('.questions').on('click', '.sub-dimension', function(){\n        $question = $(this).closest('.question');\n        $('.sub-dimension', $question).removeClass('active');\n        $(this).addClass('active');\n\n        // Update question\n        var number = $question.find('#number').html();\n        var dim = $dimension_field.find('.dimension.active').attr('data-code');\n        var subdim = $dimension_field.find('.sub-dimension.active').attr('data-code');\n        if (subdim)\n            var dimension = $dimension_field.find('.sub-dimension.active').attr('data-id');\n        else\n            var dimension = $dimension_field.find('.dimension.active').attr('data-id');\n        //$rflag = ($('#reverse').is(':checked') ? 'r' : '');\n\n        $set_dimension = $question.find('#dimension');\n        $set_dimension.html('Dimension: <span id=\"code\"><span class=\"dim-code\">'+dim+subdim+'</span><span class=\"reverse-flag\"></span><span class=\"number\">'+number+'</span></span>').addClass('active');\n        $set_dimension.attr('data-dimension', dimension);\n\n        $dimension_field = $(this).closest('#dimension-field');\n        $dimension_field.fadeOut(function(){\n            $(this).removeClass('subdimension-field').removeClass('active');\n        });\n    });\n\n    // Cancel Dimension\n    $('.questions').on('click', '#cancel-dimension', function(){\n        $dimension_field = $(this).closest('#dimension-field');\n        $dimension_field.fadeOut().removeClass('subdimension-field').removeClass('active');\n    });\n\n    // Remove\n    $('.questions').on('click', '#remove-question', function(){\n        $question = $(this).closest('.question');\n        $remove_field = $question.find('#remove-field');\n\n        if ($remove_field.hasClass('active'))\n            return false;\n\n        $remove_field.fadeIn().addClass('active');\n    });\n\n    // Cancel Remove\n    $('.questions').on('click', '#cancel-remove', function(){\n        $remove_field = $(this).closest('#remove-field');\n\n        if (!$remove_field.hasClass('active'))\n            return false;\n\n        $remove_field.fadeOut().removeClass('active');\n    });\n\n    // Confirm Remove\n    $('.questions').on('click', '#confirm-remove', function(){\n        $question = $(this).closest('.question');\n        $remove_field = $question.find('#remove-field');\n\n        if (!$remove_field.hasClass('active'))\n            return false;\n\n        $question.hide().addClass('deleted').insertAfter($('form'));\n\n        update_question_numbers();\n    });\n\n    // Add Question\n    $('#add-question').on('click', function(){\n        $template = $('#question-template').find('li.list-item');\n        $template.clone().appendTo('.questions');\n        update_question_numbers();\n    });\n\n    // Duplicate Question\n    $('.questions').on('click', '#duplicate-question', function(){\n        $question = $(this).closest('.question');\n        $template = $question.parent('li');\n        $new_question = $template.clone().insertAfter($template);\n        $new_question.find('#id').remove();\n        update_question_numbers();\n    });\n\n    // Remove Row\n    $('body').on('click', '#remove-weight-option', function(){\n        $row = $(this).closest('.weight-input');\n        $row.remove();\n    });\n\n    // Add needed class for the question template to work\n    $('#question-template').find('li').addClass('uk-nestable-list-item');\n\n    // Add weight option\n    function add_weight_option(default_weight = 0, default_tag = '', $self = $(this))\n    {\n        //$question = $(this).closest('.question');\n        //$modal = $('#modal');\n        $template = $('#weight-option-template').find('.weight-input');\n        $target = $self.find('.weight-options');\n        $newRow = $template.clone().appendTo($target);\n        $newRow.find('.bootstrap-tagsinput').remove();\n\n        if (default_weight != 0)\n            $newRow.find('.weight-value').val(default_weight);\n        if (default_tag != '')\n            $newRow.find('.weight-tag').val(default_tag);\n\n        $('input[data-role=\"tagsinput\"]', $newRow).tagsinput({\n            maxTags: 1,\n        });\n        $('.bootstrap-tagsinput', $newRow).find('input').attr('style', '');\n    }\n\n    // Update Tags\n    function update_tags()\n    {\n        $('#modal input[data-role=\"tagsinput\"]').tagsinput({\n            maxTags: 1,\n        });\n        $('#modal .bootstrap-tagsinput').find('input').attr('style', '');\n    }\n\n\n\n    // WYSYWIG Editor\n    //$(\".wysiwyg\").each(function(i, el)\n    //{\n    //    var $this = $(el);\n    //        //stylesheets = attrDefault($this, 'stylesheet-url', '')\n    //\n    //    $this.wysihtml5({\n    //        size: 'white',\n    //        //stylesheets: stylesheets.split(','),\n    //        \"html\": attrDefault($this, 'html', true),\n    //        \"color\": attrDefault($this, 'colors', true),\n    //    });\n    //});\n\n    $(\".questions\").on('nestable-stop', function(ev)\n    {\n        update_question_numbers();\n    });\n\n    // Update Question Numbers\n    function update_question_numbers()\n    {\n        var number = 1;\n        $('.questions .question').each(function()\n        {\n            var question_type = $(this).find('#question-type').attr('data-id');\n\n            if (question_type == 2) // Description\n                return;\n\n            $('#number', this).html(number);\n            number += 1;\n        });\n    }\n\n    function iterateList(items, depth)\n    {\n        var str = '';\n\n        if (! depth)\n            depth = 0;\n\n        //console.log(items);\n\n        jQuery.each(items, function(i, obj)\n        {\n            str += '[ID: ' + obj.itemId + ']\\t' + repeat('—', depth+1) + ' ' + obj.item;\n            str += '\\n';\n\n            if(obj.children)\n            {\n                str += iterateList(obj.children, depth+1);\n            }\n        });\n\n        return str;\n    }\n\n    function repeat(s, n)\n    {\n        var a = [];\n        while(a.length < n)\n        {\n            a.push(s);\n        }\n        return a.join('');\n    }\n\n    $('form').submit(function(){\n        var formData = new FormData($(this)[0]);\n        var url = window.location.pathname.replace('/create', '').replace('/edit', '');\n\n        // Save all the questions\n        var questions = [];\n        var i = 0;\n        $('form .question').each(function()\n        {\n            var id = $('#id', this).val();\n            if (! id) id = 0;\n\n            var anchors = [];\n            var k = 0;\n            $('#anchors .anchor', this).each(function()\n            {\n                if ($(this).hasClass('disabled'))\n                    return false;\n\n                var anchor = {\n                    'tag': $(this).html(),\n                    'value': $(this).attr('data-value')\n                };\n\n                anchors.push(anchor);\n            });\n\n            questions[i] = {\n                'id': id,\n                'content': $('#content', this).html(),\n                'number': $('#number', this).html(),\n                'anchors': anchors,\n                'dimension_id': $('#dimension', this).attr('data-dimension'),\n                'type': $('#question-type', this).attr('data-id'),\n            };\n            i += 1;\n        });\n        formData.append('questions', JSON.stringify(questions));\n\n        // Track deleted questions\n        var deleted_questions = [];\n        var i = 0;\n        $('.question.deleted').each(function()\n        {\n            var id = $('#id', this).val();\n            if (! id) return false;\n\n            deleted_questions[i] = {\n                'id': id,\n            };\n            i += 1;\n        });\n        formData.append('deleted_questions', JSON.stringify(deleted_questions));\n\n        // Set some other variables\n        // if (! formData['paginate']) data['paginate'] = 0;\n        // if (! formData['timed']) data['timed'] = 0;\n        // if (! formData['translation']) data['translation'] = 0;\n        // if (! formData['whitelabel']) data['whitelabel'] = 0;\n\n        $.ajax({\n            url: url,\n            type: 'POST',\n            data: formData,\n            success: function (data) {\n                $('html').prepend(data);\n\n                if (data['redirect'])\n                    window.location.href = data['redirect'];\n\n                if (data['reload'])\n                    window.location.reload();\n            },\n            error: function(data) {\n                // $('html').prepend(data.responseText);\n                var errors = data.responseJSON;\n                for (var i in errors)\n                {\n                    if (! errors.hasOwnProperty(i)) continue;\n\n                    var opts = {\n                        \"closeButton\": true,\n                        \"debug\": false,\n                        \"positionClass\": \"toast-top-right\",\n                        \"onclick\": null,\n                        \"showDuration\": \"300\",\n                        \"hideDuration\": \"1000\",\n                        \"timeOut\": \"5000\",\n                        \"extendedTimeOut\": \"1000\",\n                        \"showEasing\": \"swing\",\n                        \"hideEasing\": \"linear\",\n                        \"showMethod\": \"fadeIn\",\n                        \"hideMethod\": \"fadeOut\"\n                    };\n\n                    toastr.error(errors[i], \"Error\", opts);\n                }\n            },\n            cache: false,\n            contentType: false,\n            processData: false\n        });\n\n        return false;\n    });\n\n    // Save Assessment\n    $('#save').on('click', function(e)\n    {\n        e.preventDefault();\n        $(this).attr('disabled', 'disabled').html('Submitting.. <i class=\"fa-spinner fa-spin\"></i>');\n\n        // Save all the questions\n        var questions = [];\n        var i = 0;\n        $('form .question').each(function()\n        {\n            var id = $('#id', this).val();\n            if (! id) id = 0;\n\n            var anchors = [];\n            var k = 0;\n            $('#anchors .anchor', this).each(function()\n            {\n                if ($(this).hasClass('disabled'))\n                    return false;\n\n                var anchor = {\n                    'tag': $(this).html(),\n                    'value': $(this).attr('data-value')\n                };\n\n                anchors.push(anchor);\n            });\n\n            var type = $('#question-type', this).attr('data-id');\n            var content = $('#content', this).html();\n\n            questions[i] = {\n                'id': id,\n                'content': content,\n                'number': $('#number', this).html(),\n                'anchors': anchors,\n                'dimension_id': $('#dimension', this).attr('data-dimension'),\n                'type': type,\n                'practice': $('#practice', this).attr('data-practice'),\n            };\n            i += 1;\n        });\n\n        // Track deleted questions\n        var deleted_questions = [];\n        var i = 0;\n        $('.question.deleted').each(function()\n        {\n            var id = $('#id', this).val();\n            if (! id) return false;\n\n            deleted_questions[i] = {\n                'id': id,\n            };\n            i += 1;\n        });\n\n        // Get all our data together\n        var data = $('form').serializeObject();\n        if (! data['paginate']) data['paginate'] = 0;\n        if (! data['timed']) data['timed'] = 0;\n        if (! data['translation']) data['translation'] = 0;\n        if (! data['whitelabel']) data['whitelabel'] = 0;\n        data['questions'] = questions;\n        data['deleted_questions'] = deleted_questions;\n        // if (! data['logo']) data['logo'] = $('#logo')[0].files[0];\n        // if (! data['background']) data['background'] = $('#background')[0].files[0];\n\n        // Get our URL\n        var url = window.location.pathname.replace('/create', '').replace('/edit', '');\n\n        // Perform the request\n        $.ajax({\n            type: 'post',\n            url: url,\n            data: data,\n            dataType: 'json',\n            // contentType: false,\n            // processData: false,\n            success: function(data) {\n                console.log(data);\n                $(\"body\").prepend(data);\n                //var opts = {\n                //    \"closeButton\": true,\n                //    \"debug\": false,\n                //    \"positionClass\": \"toast-top-right\",\n                //    \"onclick\": null,\n                //    \"showDuration\": \"300\",\n                //    \"hideDuration\": \"1000\",\n                //    \"timeOut\": \"5000\",\n                //    \"extendedTimeOut\": \"1000\",\n                //    \"showEasing\": \"swing\",\n                //    \"hideEasing\": \"linear\",\n                //    \"showMethod\": \"fadeIn\",\n                //    \"hideMethod\": \"fadeOut\"\n                //};\n                //toastr.success(\"The assessment has been saved successfully!\", \"Success\", opts);\n\n                if (data['redirect']) {\n                    setTimeout(function() {\n                        window.location.replace(data['redirect']);\n                    }, 1000);\n                }\n\n                if (data['reload']) {\n                    window.location.reload();\n                }\n            },\n            error: function(data) {\n                $('html').prepend(data.responseText);\n                var errors = data.responseJSON;\n                for (var i in errors)\n                {\n                    if (! errors.hasOwnProperty(i)) continue;\n\n                    var opts = {\n                        \"closeButton\": true,\n                        \"debug\": false,\n                        \"positionClass\": \"toast-top-right\",\n                        \"onclick\": null,\n                        \"showDuration\": \"300\",\n                        \"hideDuration\": \"1000\",\n                        \"timeOut\": \"5000\",\n                        \"extendedTimeOut\": \"1000\",\n                        \"showEasing\": \"swing\",\n                        \"hideEasing\": \"linear\",\n                        \"showMethod\": \"fadeIn\",\n                        \"hideMethod\": \"fadeOut\"\n                    };\n\n                    toastr.error(errors[i], \"Error\", opts);\n                }\n            }\n        });\n    });\n\n    // Checkboxes\n    $('input.icheck').iCheck({\n        checkboxClass: 'icheckbox_square-aero',\n        radioClass: 'iradio_square-aero'\n    });\n\n    // Reveal hidden fields\n    $('.reveal-field').on('ifChecked', function(event){\n        $('.'+$(this).attr('data-field-to-reveal')).slideDown();\n    }).on('ifUnchecked', function(){\n        $('.'+$(this).attr('data-field-to-reveal')).slideUp();\n    });\n\n    // Check for fields that should already be revealed\n    $('.reveal-field').each(function(){\n        if ($(this).is(':checked')) {\n            $('.'+$(this).attr('data-field-to-reveal')).show();\n        }\n    });\n\n    // Reveal field by selection\n    $('.reveal-field-by-selection').on('change', function(){\n        $('.'+$(this).attr('data-field-to-reveal')).hide();\n        $('.'+$(this).attr('data-field-to-reveal')+'.'+$(this).val()).slideDown();\n    });\n\n    // Check for fields that should already be revealed\n    $('.reveal-field-by-selection').each(function(){\n        $('.'+$(this).attr('data-field-to-reveal')).hide();\n        $('.'+$(this).attr('data-field-to-reveal')+'.'+$(this).val()).show();\n    });\n\n    // Show sidebar sub-nav right away\n    $('.sidebar-menu-under .menu-category[data-parent=\"Assessments\"]').show();\n});\n\n$.fn.serializeObject = function()\n{\n    var o = {};\n    var a = this.serializeArray();\n    $.each(a, function() {\n        if (o[this.name] !== undefined) {\n            if (!o[this.name].push) {\n                o[this.name] = [o[this.name]];\n            }\n            o[this.name].push(this.value || '');\n        } else {\n            o[this.name] = this.value || '';\n        }\n    });\n    return o;\n};\n"]}