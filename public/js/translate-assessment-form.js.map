{"version":3,"sources":["translate-assessment-form.js"],"names":[],"mappingsfile":"translate-assessment-form.js","sourcesContent":["jQuery(document).ready(function($){\n\n    // Set headers for AJAX\n    $.ajaxSetup({\n        headers: {\n            'X-CSRF-TOKEN': $('meta[name=\"csrf_token\"]').attr('content')\n        }\n    });\n\n    // Fix for cached disabled attribute\n    $('#save').removeAttr('disabled');\n\n    // Initialize the CKEditor\n    $('#modal-wysiwyg textarea').ckeditor();\n\n    // Edit Question\n    // $('.questions').on('click', '#content', function(){\n    //     $question = $(this).closest('.question');\n    //     $content = $question.find('#content');\n    //     $content_edit_field = $question.find('#content-edit-field');\n    //\n    //     if ($content_edit_field.hasClass('active'))\n    //         return false;\n    //\n    //     var current_content = $content.html();\n    //\n    //     $content_edit_field.find('input').val(current_content);\n    //     $content.hide();\n    //     $content_edit_field.fadeIn().addClass('active').find('input').focus().select();\n    // });\n\n    // WYSIWYG Description Editor\n    $('.edit-description-with-wysiwyg').on('click', function(){\n        var current_content = $(this).val();\n\n        $edit_field = $(this);\n\n        $modal = $('#modal-wysiwyg');\n        $modal.find('.modal-title').html('Advanced Question Editor');\n        $modal.find('.save-button').attr('id', 'save-description-edits');\n        //$body = $modal.find('.modal-body').append('<textarea id=\"Editor\" class=\"form-control input-lg \">'+current_content+'</textarea>');\n        $textarea = $modal.find('textarea').html(current_content);\n        if (! CKEDITOR.instances.Editor)\n            $editor = $textarea.ckeditor();\n        else\n            CKEDITOR.instances.Editor.setData(current_content);\n        $modal.modal('show');\n\n        $modal.on('click', '#save-description-edits', function(){\n\n            var new_content = CKEDITOR.instances.Editor.document.getBody().getHtml();\n\n            if (new_content.trim() == '')\n                new_content = 'This is a sample question';\n\n            $edit_field.val(new_content);\n\n            $modal.modal('hide');\n        });\n    });\n\n    // WYSIWYG Question Editor\n    $('.edit-with-wysiwyg').on('click', function(){\n        var current_content = $(this).next('textarea').val();\n\n        $edit_field = $(this).next('textarea'); \n\n        $modal = $('#modal-wysiwyg');\n        $modal.find('.modal-title').html('Advanced Question Editor');\n        $modal.find('.save-button').attr('id', 'save-description-edits');\n        //$body = $modal.find('.modal-body').append('<textarea id=\"Editor\" class=\"form-control input-lg \">'+current_content+'</textarea>');\n        $textarea = $modal.find('textarea').html(current_content);\n        if (! CKEDITOR.instances.Editor)\n            $editor = $textarea.ckeditor();\n        else\n            CKEDITOR.instances.Editor.setData(current_content);\n        $modal.modal('show');\n\n        $modal.on('click', '#save-description-edits', function(){\n\n            var new_content = CKEDITOR.instances.Editor.document.getBody().getHtml();\n\n            if (new_content.trim() == '')\n                new_content = 'This is a sample question';\n\n            $edit_field.val(new_content);\n\n            $modal.modal('hide');\n        });\n    });\n\n    // Detect other similar anchors\n    $('.anchor').on('change', function(){\n        var original_anchor = $(this).closest('.row').find('.anchor-original').html();\n        var val = $(this).val();\n\n        var i = 0;\n        $('.anchor-original').not($(this).closest('.row').find('.anchor-original')).each(function(){\n            if ($(this).html() == original_anchor) {\n                i += 1;\n            }\n        });\n\n        if (i > 0) {\n            if (confirm(i+' other anchors titled '+original_anchor+' were found in this assessment. Would you like to translate all of them to '+val+'?')) {\n                $('.anchor-original').not($(this).closest('.row').find('.anchor-original')).each(function(){\n                    if ($(this).html() == original_anchor) {\n                        $(this).closest('.row').find('.anchor').val(val);\n                    }\n                });\n            }\n        }\n    });\n\n    // Save Translation\n    $('#save').on('click', function(e){\n        e.preventDefault();\n\n        if ($('#language_id').val() == '')\n        {\n            var opts = {\n                \"closeButton\": true,\n                \"debug\": false,\n                \"positionClass\": \"toast-top-right\",\n                \"onclick\": null,\n                \"showDuration\": \"300\",\n                \"hideDuration\": \"1000\",\n                \"timeOut\": \"5000\",\n                \"extendedTimeOut\": \"1000\",\n                \"showEasing\": \"swing\",\n                \"hideEasing\": \"linear\",\n                \"showMethod\": \"fadeIn\",\n                \"hideMethod\": \"fadeOut\"\n            };\n\n            toastr.error(\"Language must be specified.\", \"Error\", opts);\n            return;\n        }\n\n        $(this).attr('disabled', 'disabled').html('Submitting.. <i class=\"fa-spinner fa-spin\"></i>');\n\n        var questions = [];\n        var i = 0;\n\n        $('form .question').each(function(){\n\n            var id = $('#id', this).val();\n            if (! id) id = 0;\n\n            var type = $('#type', this).val();\n\n            // Get anchors\n            var anchors = [];\n            if (type == 1)\n            {\n                var k = 0;\n                $('.anchor', this).each(function()\n                {\n                    var anchor = $(this).val();\n                    anchors.push(anchor);\n                });\n            }\n\n            // Save content based on question type\n            var content = '';\n            if (type == 1 || type == 2 || type == 3)\n                content = $('#content', this).val();\n\n            if (type == 10)\n                content = JSON.stringify({\n                    text: $('#content', this).val(),\n                    next: $('#button', this).val(),\n                });\n\n            // Collect our questions\n            questions[i] = {\n                'question_id': id,\n                'content': content,\n                'anchors': anchors,\n            };\n            i += 1;\n        });\n\n        var data = $('form').serializeObject();\n        data['questions'] = questions;\n\n        // console.log(data);\n\n        //var url = '/dashboard/assessments';\n        var url = window.location.pathname.replace('/create', '').replace('/edit', '');\n\n        $.ajax({\n            type: 'post',\n            url: url,\n            data: data,\n            dataType: 'json',\n            success: function(data) {\n                console.log(data);\n                //var opts = {\n                //    \"closeButton\": true,\n                //    \"debug\": false,\n                //    \"positionClass\": \"toast-top-right\",\n                //    \"onclick\": null,\n                //    \"showDuration\": \"300\",\n                //    \"hideDuration\": \"1000\",\n                //    \"timeOut\": \"5000\",\n                //    \"extendedTimeOut\": \"1000\",\n                //    \"showEasing\": \"swing\",\n                //    \"hideEasing\": \"linear\",\n                //    \"showMethod\": \"fadeIn\",\n                //    \"hideMethod\": \"fadeOut\"\n                //};\n                //toastr.success(\"The assessment has been saved successfully!\", \"Success\", opts);\n\n                if (data['redirect']) {\n                    setTimeout(function() {\n                        window.location.replace(data['redirect']);\n                    }, 1000);\n                }\n\n                if (data['reload']) {\n                    window.location.reload();\n                }\n            },\n            error: function(data) {\n                $('html').prepend(data.responseText);\n                //var errors = data.responseJSON;\n                //console.log(data.status+' '+data.statusText);\n                //console.log(data);\n                //for (var i in errors) {\n                //    if (!errors.hasOwnProperty(i)) continue;\n                //    $error = $(\n                //        '<div style=\"display:none;\" class=\"alert alert-danger alert-dismissible fade in\" role=\"alert\">'\n                //        +'<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>'\n                //        +'<i class=\"fa-exclamation-circle\"></i> '+errors[i]+'</div>'\n                //    );\n                //    $('form').after($error);\n                //    $error.fadeTo(2000, 500).fadeTo(1000, 0, function(){\n                //        $(this).alert('close');\n                //    });\n                //}\n\n                var errors = data.responseJSON;\n\n                for (var i in errors)\n                {\n                    if (! errors.hasOwnProperty(i)) continue;\n\n                    var opts = {\n                        \"closeButton\": true,\n                        \"debug\": false,\n                        \"positionClass\": \"toast-top-right\",\n                        \"onclick\": null,\n                        \"showDuration\": \"300\",\n                        \"hideDuration\": \"1000\",\n                        \"timeOut\": \"5000\",\n                        \"extendedTimeOut\": \"1000\",\n                        \"showEasing\": \"swing\",\n                        \"hideEasing\": \"linear\",\n                        \"showMethod\": \"fadeIn\",\n                        \"hideMethod\": \"fadeOut\"\n                    };\n\n                    toastr.error(errors[i], \"Error\", opts);\n                }\n            }\n        });\n    });\n\n    // Checkboxes\n    $('input.icheck').iCheck({\n        checkboxClass: 'icheckbox_square-aero',\n        radioClass: 'iradio_square-aero'\n    });\n\n    // Show sidebar sub-nav right away\n    $('.sidebar-menu-under .menu-category[data-parent=\"Assessments\"]').show();\n});\n\n\n$.fn.serializeObject = function()\n{\n    var o = {};\n    var a = this.serializeArray();\n    $.each(a, function() {\n        if (o[this.name] !== undefined) {\n            if (!o[this.name].push) {\n                o[this.name] = [o[this.name]];\n            }\n            o[this.name].push(this.value || '');\n        } else {\n            o[this.name] = this.value || '';\n        }\n    });\n    return o;\n};\n"]}