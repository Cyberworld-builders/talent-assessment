FROM php:7.4-fpm

# Set working directory
WORKDIR /var/www

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    libzip-dev \
    zip \
    unzip \
    nodejs \
    npm \
    wget \
    xvfb \
    python \
    python3 \
    build-essential \
    libfontconfig1 \
    libxrender1 \
    libxtst6 \
    libxi6 \
    libjpeg62-turbo \
    libpng16-16 \
    libxss1 \
    libgconf-2-4 \
    libasound2 \
    libatk1.0-0 \
    libc6 \
    libcairo2 \
    libcups2 \
    libdbus-1-3 \
    libexpat1 \
    libfontconfig1 \
    libgcc1 \
    libgconf-2-4 \
    libgdk-pixbuf2.0-0 \
    libglib2.0-0 \
    libgtk-3-0 \
    libnspr4 \
    libpango-1.0-0 \
    libpangocairo-1.0-0 \
    libstdc++6 \
    libx11-6 \
    libx11-xcb1 \
    libxcb1 \
    libxcomposite1 \
    libxcursor1 \
    libxdamage1 \
    libxext6 \
    libxfixes3 \
    libxi6 \
    libxrandr2 \
    libxrender1 \
    libxss1 \
    libxtst6 \
    ca-certificates \
    fonts-liberation \
    libappindicator1 \
    libnss3 \
    lsb-release \
    xdg-utils \
    vim \
    nano

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd zip

# Install wkhtmltopdf
RUN wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.4/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz \
    && tar -xf wkhtmltox-0.12.4_linux-generic-amd64.tar.xz \
    && mv wkhtmltox/bin/wkhtmlto* /usr/bin/ \
    && rm -rf wkhtmltox*

# Get latest Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Create www-data user if it doesn't exist
RUN useradd -m -s /bin/bash www-data || true

# Set permissions for www-data
RUN chown -R www-data:www-data /var/www

# Switch to www-data user
USER www-data

# Copy the entire application first
COPY --chown=www-data:www-data . .

# Install PHP dependencies (skip all scripts, tests, and database connections)
RUN composer install --no-dev --optimize-autoloader --no-scripts --no-interaction

# Install Node.js dependencies (temporarily disabled due to node-sass issues)
# RUN npm install

# Build frontend assets (temporarily disabled)
# RUN npm run gulp

# Expose port 8000
EXPOSE 8000

# Keep container running without starting the server
CMD ["tail", "-f", "/dev/null"] 